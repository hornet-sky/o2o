<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="my.ssm.o2o.dao.ProductCategoryDao">
  <select id="list" resultType="productCategory">
    SELECT 
	  `product_category_id`,
	  `product_category_name`,
	  `priority`,
	  `create_time`,
	  `shop_id` 
	FROM
	  `tb_product_category` 
	<where>
	   <if test="condition != null and condition.productCategoryName != null">
           `product_category_name` LIKE CONCAT('%', #{condition.productCategoryName}, '%')
       </if>
	   <if test="condition != null and condition.shopId != null">
	       AND `shop_id` = #{condition.shopId}
	   </if>
	</where>
	<if test="pagingParams != null and pagingParams.orderRules != null">
        ORDER BY ${pagingParams.orderRules}
    </if>
    <if test="pagingParams != null and pagingParams.rowIndex != null and pagingParams.rowSize != null">
        LIMIT #{pagingParams.rowIndex}, #{pagingParams.rowSize}
    </if>
  </select>
  <select id="count" resultType="long">
    SELECT 
      COUNT(1) 
    FROM
      `tb_product_category` 
    <where>
       <if test="condition.productCategoryName != null">
           `product_category_name` LIKE CONCAT('%', #{condition.productCategoryName}, '%')
       </if>
       <if test="condition.shopId != null">
           AND `shop_id` = #{condition.shopId}
       </if>
    </where>
  </select>
  <delete id="delete">
    DELETE 
    FROM 
      `tb_product_category`
    <where>
       <if test="condition.productCategoryId != null">
           `product_category_id` = #{condition.productCategoryId}
       </if>
       <if test="condition.shopId != null">
           AND `shop_id` = #{condition.shopId}
       </if>
    </where> 
  </delete>
  <insert id="batchInsert" parameterType="java.util.List">
    INSERT INTO `tb_product_category` (
	  `product_category_name`,
	  `priority`,
	  `create_time`,
	  `shop_id`
	) 
	VALUES
	<foreach collection="productCategoryList" item="productCategory" separator=",">
	   (
	     #{productCategory.productCategoryName},
	     #{productCategory.priority},
	     #{productCategory.createTime},
	     #{productCategory.shopId}
	   )
	</foreach>
  </insert>
</mapper>